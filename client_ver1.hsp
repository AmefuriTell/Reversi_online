#include "pcbnet2.as"

screen 0,,,, ginfo_dispx / 2
gsel 0, 2
onexit *exit

command = ""
message = ""
set_address

//ソケット作成
repeat
    tcpopen sockID, address, port
    if(stat != 0){
        dialog "ソケット作成に失敗しました。\nもう一度作成しますか？", 2
        if(stat == 6) : continue
        end
    }
    break
loop

//接続確認
repeat
    tcpiscon sockID
    if(stat == 1){
        mes "接続しました"
        input command, ginfo_winx, 20
        button gosub "送る", *send_command
        button gosub "マッチ", *make_match

        //接続したら、UserIDをもらう。
        command = "GetUserID"
        gosub *send_command
        break
    }else:if(stat > 1){
        dialog "接続に失敗しました", 1 : goto *exit
    }
    wait 1
loop


repeat
    //接続し続けているかの確認
    tcpfail sockID
    if(stat != 0){
        dialog "接続が切断されました", 1 : goto *exit
    }

    //サーバからのメッセージを確認
    tcpget message, 1024, sockID
    if(stat != 0){
        gosub *receive_message
    }
    wait 1
loop
stop

*make_match
    command = "JoinMatch"
    gosub *send_command
return

*send_command
    tcpput command, sockID
return

*receive_message
    if(command == "GetUserID"){
        userid = int(message)
    }else:if(command == "JoinMatch"){
        if(message == "NowSerchOtherPlayer"){
            cls
            mes "ほかのプレイヤーを待っています"
        }else{
            cls
            mes "相手が見つかりました"
            myturn = int(message)
            if(myturn == 1){
                mes "先攻です"
            }else{
                mes "後攻です"
            }
        }
    }
    
    if(message == "NonPlayer"){
        cls
        mes "相手が切断しました"
    }
return
stop

*exit
    tcpclose sockID
end

#deffunc set_address
    address_txt = ""
    notesel address_txt
    noteload "address"
    noteget address, 0
    noteget port, 1
    port = int(port)
return
